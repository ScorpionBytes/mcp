# This workflow installs and tests q developer
name: Q
on:
  push:
  workflow_dispatch:
permissions: {}
jobs:
  q:
    runs-on: ubuntu-latest
    environment: q
    env:
      # Determination to run debugging details
      ACTIONS_RUNNER_DEBUG: ${{ vars.ACTIONS_RUNNER_DEBUG || 'false' }}
      ACTIONS_STEP_DEBUG: ${{ vars.ACTIONS_STEP_DEBUG || 'false' }}
    #   # Secrets aren't available for step `if` statements.
    #   IS_THERE_AN_AWS_ROLE_ARN_TO_ASSUME: ${{ secrets.AWS_ROLE_ARN_TO_ASSUME != '' }}
    #   IS_THERE_A_BOT_GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN != '' }}
    # timeout-minutes: 20
    steps:
      - name: Checkout repository
        id: checkout-repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    #   - name: Debug OIDC Claims
    #     id: debug-oidc-claims
    #     if: ${{ env.ACTIONS_RUNNER_DEBUG == 'true' && env.ACTIONS_STEP_DEBUG == 'true' }}
    #     uses: github/actions-oidc-debugger@0ac6a1f7fefa4229fabe4ce05f17d9ad03a5b328 #main
    #     with:
    #       audience: '${{ github.server_url }}/${{ github.repository_owner }}'
      - name: Setup AWS Credentials
        id: setup-aws-credentials
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722
        if: ${{ env.IS_THERE_AN_AWS_ROLE_ARN_TO_ASSUME == 'true' && env.AWS_REGION }}
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: 7200
          role-session-name: GitHubActions${{ github.run_id }}
          mask-aws-account-id: true
      - name: Setup Q Developer on Linux
        id: setup-q-linux
        if: runner.os == 'Linux'
        run: |
          # Setup Q Developer
          # https://docs.aws.amazon.com/amazonq/latest/qdeveloper-ug/command-line-installing-ssh-setup-autocomplete.html
          ldd --version # If the version is 2.34 or newer, use the standard version. If it's older, use the musl version.
          # ubuntu-latest is reporting version '2.39'
          curl --proto '=https' --tlsv1.2 -sSf "https://desktop-release.q.us-east-1.amazonaws.com/latest/q-x86_64-linux.zip" -o "q.zip"
          #curl --proto '=https' --tlsv1.2 -sSf "https://desktop-release.q.us-east-1.amazonaws.com/latest/q-aarch64-linux.zip" -o "q.zip"
          #curl --proto '=https' --tlsv1.2 -sSf "https://desktop-release.q.us-east-1.amazonaws.com/latest/q-x86_64-linux-musl.zip" -o "q.zip"
          #curl --proto '=https' --tlsv1.2 -sSf "https://desktop-release.q.us-east-1.amazonaws.com/latest/q-aarch64-linux-musl.zip" -o "q.zip"
          unzip q.zip
          # Must use --no-confirm when installing unattended
          ./q/install.sh --no-confirm
          q --version
      - name: Setup Q Developer on macOS
        id: setup-q-macos
        if: runner.os == 'macOS'
        run: |
          # Setup Q Developer
          # NOTE: Homebrew is pre-installed on image but not added to PATH.
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          brew install amazon-q
          q --version
      - name: Login to Q
        id: login-to-q
        run: |
          q login --help
          q login --license pro --identity-provider ${{ secrets.IDENTITY_PROVIDER }} --region ${{ vars.AWS_REGION }} --use-device-flow
          q doctor --help
          q integrations install ssh
          q doctor --all --verbose
